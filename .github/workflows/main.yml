name: Main workflow
on: push
env:
  SECRET_KEY: "398jy60_15v)f-b=rdg@hryajjfxo6hl*c0ll1+bg7ay-gjr)l"
  DATABASE_URL: "mysql://root:root@127.0.0.1:3306/enfight?charset=utf8mb4"
  DEBUG: "1"
  DEBUG_SQL_QUERIES: "0"
  DJANGO_ADMIN_NAME: "user"
  DJANGO_ADMIN_EMAIL: "user@example.com"
  DJANGO_ADMIN_PASSWORD: "root"
  VK_SECRET: ""
  VK_ALLOWED_USERS: "*"
  SENTRY_DSN: ""
jobs:
  lint:
    name: Lint with black
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install poetry
        env:
          # To install specific version, not latest release
          POETRY_VERSION: 1.1.4
        run: |
          # https://python-poetry.org/docs/#installation
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
          # Add "poetry" executable to $PATH
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Lint with black
        run: poetry run black --check .
  check-no-migrations:
    name: Check no migrations are required
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install poetry
        env:
          # To install specific version, not latest release
          POETRY_VERSION: 1.1.4
        run: |
          # https://python-poetry.org/docs/#installation
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
          # Add "poetry" executable to $PATH
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Check no new migrations are required
        run: |
          sudo systemctl start mysql.service
          poetry run python manage.py ensurehasdb
          poetry run python manage.py makemigrations --check --dry-run

  test:
    name: Test with pytest
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install poetry
        env:
          # To install specific version, not latest release
          POETRY_VERSION: 1.1.4
        run: |
          # https://python-poetry.org/docs/#installation
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/1.1.4/get-poetry.py | python -
          # Add "poetry" executable to $PATH
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Test with pytest
        run: |
          sudo systemctl start mysql.service
          poetry run pytest

  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    if: ${{ github.ref == 'ref/head/master' }}
    needs: [ lint, check-no-migrations, test ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Stop gunicorn via supervisor
        uses: appleboy/ssh-action@61e292b601b405c4b211ea30a046bb1a97e45bdc
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            supervisorctl stop enfight_dev

      - name: Copy code to folder
        uses: burnett01/rsync-deployments@695f58ca67af73a00d68f4ea156d92d427d1fbeb
        with:
          switches: -a --exclude-from=.deployignore
          path: .
          remote_path: ${{secrets.DEPLOY_DEV_FOLDER}}
          remote_host: ${{secrets.DEPLOY_HOST}}
          remote_user: ${{secrets.DEPLOY_USER}}
          remote_key: ${{secrets.DEPLOY_KEY}}

      - name: Install dependencies
        uses: appleboy/ssh-action@61e292b601b405c4b211ea30a046bb1a97e45bdc
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_DEV_FOLDER }} || { echo "No dev folder"; exit 1; }
            /home/dimadk/.poetry/bin/poetry install --no-dev --remove-untracked

      - name: Collect static files
        uses: appleboy/ssh-action@61e292b601b405c4b211ea30a046bb1a97e45bdc
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_DEV_FOLDER }} || { echo "No dev folder"; exit 1; }
            /home/dimadk/.poetry/bin/poetry run python manage.py collectstatic --no-input

      - name: Run dev migrations
        uses: appleboy/ssh-action@61e292b601b405c4b211ea30a046bb1a97e45bdc
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_DEV_FOLDER }} || { echo "No dev folder"; exit 1; }
            /home/dimadk/.poetry/bin/poetry run python manage.py ensurehasdb
            /home/dimadk/.poetry/bin/poetry run python manage.py migrate

      - name: Start gunicorn via supervisor
        uses: appleboy/ssh-action@61e292b601b405c4b211ea30a046bb1a97e45bdc
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            supervisorctl start enfight_dev
